<?php
namespace service\survey\models;
use \service\base\db\SimpleAR;
class limeToken extends SimpleAR
{

    public static $survey_id;

    public static function getDb()
    {
        return \Yii::$app->db_survey; // TODO: Change the autogenerated stub
    }

    public static function getSurveyId($survey_id = 0)
    {
        self::$survey_id = $survey_id;
    }

    public static function tableName()
    {
        return 'lime_tokens_' . self::$survey_id;
    }

    public static function addSurveyParticipant(array $planParticipant = [])
    {
        if (empty($planParticipant)) return;

        $ta = \Yii::$app->db_survey->createCommand("SHOW TABLES LIKE '" . static::tableName() . "'")->queryAll();
        if ($ta == null) {
            static::createTable(self::$survey_id);
        }

        if (false == static::find()->all()) {
            $data = [];
            foreach ($planParticipant[0] as $key => $value) {
                $data[$key]['firstname'] = $value['name'];
                $data[$key]['language'] = 'zh-Hans';
                $data[$key]['email'] = '99@dailedu.com';
                $data[$key]['validfrom'] = '2015-07-07 00:00:00';
                $data[$key]['validuntil'] = '2016-07-15 00:00:00';
            }

            \Yii::$app->db_survey->createCommand()->batchInsert(static::tableName(), ['firstname', 'language', 'email', 'validfrom', 'validuntil'],
                $data
            )->execute();

//            static::curlSurveyToken(self::$survey_id);

        } else {
            static::deleteAll();
        }
    }

    public static function curlSurveyToken($survry_id = 871212)
    {
        // 2. 设置选项，包括URL
        $url = 'survey.dteols.cn/index.php/admin/tokens/sa/tokenify/surveyid/' . $survry_id . '/ok/Y';

        $curl = curl_init();

// 设置你需要抓取的URL
        curl_setopt($curl, CURLOPT_URL, $url);

//// 设置header
//        curl_setopt($curl, CURLOPT_HEADER, 1);

// 设置cURL 参数，要求结果保存到字符串中还是输出到屏幕上。
//        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);

        curl_setopt($curl, CURLOPT_POST, 1);
// 运行cURL，请求网页
        $data = curl_exec($curl);

// 关闭URL请求
        curl_close($curl);

// 显示获得的数据
        var_dump($data);
    }


    public static function createTable($survey_id = 666666)
    {

        $con = \Yii::$app->db_survey;
        $tableName = 'lime_tokens_' . $survey_id;
        $key = 'idx_token_token_' . $survey_id . '_' . rand(10000, 99999);
        $sql = "
        
        DROP TABLE IF EXISTS `$tableName`;
        CREATE TABLE `$tableName` (
          `tid` int(11) NOT NULL AUTO_INCREMENT,
          `participant_id` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
          `firstname` varchar(150) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
          `lastname` varchar(150) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
          `email` text COLLATE utf8mb4_unicode_ci,
          `emailstatus` text COLLATE utf8mb4_unicode_ci,
          `token` varchar(35) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
          `language` varchar(25) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
          `blacklisted` varchar(17) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
          `sent` varchar(17) COLLATE utf8mb4_unicode_ci DEFAULT 'N',
          `remindersent` varchar(17) COLLATE utf8mb4_unicode_ci DEFAULT 'N',
          `remindercount` int(11) DEFAULT '0',
          `completed` varchar(17) COLLATE utf8mb4_unicode_ci DEFAULT 'N',
          `usesleft` int(11) UNSIGNED DEFAULT '1',
          `validfrom` datetime DEFAULT NULL,
          `validuntil` datetime DEFAULT NULL,
          `mpid` int(11) DEFAULT NULL,
          PRIMARY KEY (`tid`),
          KEY `$key` (`token`)
        ) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
        
        ";
        $con->createCommand($sql)->execute();
    }


    public static function getSurveyToken($unique_code)
    {

        $where['lastname'] = $unique_code;

        $token_entity = static::find()->where($where)->one();
        
        //\GtoolsDebug::testLog(__METHOD__, [$unique_code, $token_entity, $token_entity->toArray()]);
        
        if (!empty($token_entity)) {
            return $token_entity->toArray();
        }
        
        return null;
    }
    

}